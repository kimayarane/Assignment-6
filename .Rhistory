GeoStates <- gvisGeoChart(cityState, "State","Count",
options=list(region="US", displayMode="regions", resolution="provinces",
width=600, height=400))
plot(GeoStates)
knitr::opts_chunk$set(echo = TRUE)
suppressPackageStartupMessages(library(knitr))
opts_chunk$set(cache=TRUE, message=FALSE,size = 'footnotesize',warning=FALSE)
op <- options(gvis.plot.tag='chart')
devtools::install_github("patilv/gudatavizfa17",auth_token="d183f669695ecf83cd0bf2875db10f9fe195acde")
library(gudatavizfa17)
opendataviz()
library(ggplot2)
library(dplyr)
library(tidyr)
library(googleVis)
## Making a new dataset compiling all the variables and values
facetcities=gather(bcities, "Variable", "Values", 1,3:13)
## Taking out "City" as a variable
str(facetcities)
facetcities=facetcities[facetcities$Variable!="City",]
## Converting values that were categorized as characters back to numeric values
facetcities$Values=as.numeric(facetcities$Values)
ggplot(facetcities,aes(x=Rank,y=Values)) + geom_point(size=.5)+ facet_wrap(~Variable, scales = "free")+geom_smooth(method="lm")
names(bcities)[4]="Bars"
names(bcities)[3]="Pop"
names(bcities)[8]="ProSpo"
MMap <- gvisGeoChart(bcities, locationvar = "City", options=list(region="US", displayMode="markers", resolution="provinces", width=600, height=400))
plot(MMap)
unlink('Top Ranked City_cache', recursive = TRUE)
/usr/bin/ruby -e "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)"
install.packages(c("backports", "boot", "cluster", "dendextend", "devtools", "foreign", "gapminder", "glue", "lattice", "lazyeval", "MASS", "Matrix", "mgcv", "openssl", "rmarkdown", "robustbase", "rpart", "rstudioapi", "stringi", "survival", "tidyselect", "tidyverse", "withr"))
install.packages(c("backports", "boot", "cluster", "dendextend", "devtools", "foreign", "gapminder", "glue", "lattice", "lazyeval", "MASS", "Matrix", "mgcv", "openssl", "rmarkdown", "robustbase", "rpart", "rstudioapi", "stringi", "survival", "tidyselect", "tidyverse", "withr"))
install.packages(c("backports", "boot", "cluster", "dendextend", "devtools", "foreign", "gapminder", "glue", "lattice", "lazyeval", "MASS", "Matrix", "mgcv", "openssl", "rmarkdown", "robustbase", "rpart", "rstudioapi", "stringi", "survival", "tidyselect", "tidyverse", "withr"))
install.packages(c("backports", "boot", "cluster", "dendextend", "devtools", "foreign", "gapminder", "glue", "lattice", "lazyeval", "MASS", "Matrix", "mgcv", "openssl", "rmarkdown", "robustbase", "rpart", "rstudioapi", "stringi", "survival", "tidyselect", "tidyverse", "withr"))
install.packages(c("backports", "boot", "cluster", "dendextend", "devtools", "foreign", "gapminder", "glue", "lattice", "lazyeval", "MASS", "Matrix", "mgcv", "openssl", "rmarkdown", "robustbase", "rpart", "rstudioapi", "stringi", "survival", "tidyselect", "tidyverse", "withr"))
install.packages(c("backports", "boot", "cluster", "dendextend", "devtools", "foreign", "gapminder", "glue", "lattice", "lazyeval", "MASS", "Matrix", "mgcv", "openssl", "rmarkdown", "robustbase", "rpart", "rstudioapi", "stringi", "survival", "tidyselect", "tidyverse", "withr"))
